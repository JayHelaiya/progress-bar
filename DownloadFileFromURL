

 @Override
    protected void onPrepareDialog(int id, Dialog dialog) {
        removeDialog(id);
    }

    @Override
    protected Dialog onCreateDialog(int id) {
        switch (id) {
            case progress_bar_type: // we set this to 0
                pDialog = new ProgressDialog(this);
                pDialog.setMessage("Downloading eBook file. Please wait...");
                pDialog.setIndeterminate(false);
                pDialog.setProgress(0);
                pDialog.setMax(100);
                pDialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);
                pDialog.setCancelable(false);

                pDialog.setButton(DialogInterface.BUTTON_NEGATIVE, "Cancel", new DialogInterface.OnClickListener() {
                    @Override
                    public void onClick(DialogInterface dialog, int which) {
                        cancleCount++;
                        pDialog.dismiss();

                    }
                });
                pDialog.setCanceledOnTouchOutside(false);
                pDialog.show();
                return pDialog;
            default:
                return null;
        }
    }

   class  DownloadFileFromURL extends AsyncTask<String, String, String> {

       AlertDialog.Builder builder = new AlertDialog.Builder(activity);
       String fpath;
       File file = new File(Environment
               .getExternalStorageDirectory().toString()+"/Documents");
        /**
         * Before starting background thread
         * Show Progress Bar Dialog
         * */
        @Override
        protected void onPreExecute() {
            super.onPreExecute();
            showDialog(progress_bar_type);

        }

        /**
         * Downloading file in background thread
         * */
        @Override
        protected String doInBackground(String... f_url) {
            int count;
            try {
                URL url = new URL(f_url[0]);
                URLConnection conection = url.openConnection();
                conection.connect();

                // this will be useful so that you can show a tipical 0-100%
                // progress bar
                int lenghtOfFile = conection.getContentLength();

                // download the file
                InputStream input = new BufferedInputStream(url.openStream(),
                        8192);


                if(file.mkdir()) {
                    Log.e("PATH","Directory created");
                } else {
                    Log.e("PATH","Directory is not created");
                }
                Log.e("ABP",file.getAbsolutePath());
                // Output stream
                OutputStream output = new FileOutputStream(file.getAbsolutePath()+"/"+fileName+"");

                fpath= file.getAbsolutePath()+"/"+fileName+"";
                Log.e("path  www",fpath);
                byte data[] = new byte[1024];

                long total = 0;

                while ((count = input.read(data)) != -1) {

                    if (cancleCount>0)
                    {
                        break;
                    }
                    else {

                        total += count;
                        // publishing the progress....
                        // After this onProgressUpdate will be called
                        publishProgress("" + (int) ((total * 100) / lenghtOfFile));

                        // writing data to + file
                        output.write(data, 0, count);
                    }

                }

                // flushing output
                output.flush();

                // closing streams
                output.close();
                input.close();

            } catch (Exception e) {
                Log.e("Error: ", e.getMessage());
            }

            return null;
        }

        /**
         * Updating progress bar
         * */
        protected void onProgressUpdate(String... progress) {
            // setting progress percentage
            pDialog.setProgress(Integer.parseInt(progress[0]));
        }
    /**
     * After completing background task
     * Dismiss the progress dialog
     * **/


    @Override
    protected void onPostExecute(String file_url) {
        // dismiss the dialog after the file was downloaded
        String Documents="\"Documents\"";

        if(cancleCount>0)
        {

            cancleCount=0;

        }
        else if(cancleCount==0)
        {
            pDialog.dismiss();
            builder.setMessage("eBook file download completed."+"\nPlease check file into "+Documents+" directory.")
                    .setCancelable(false)
                    .setNeutralButton("Open", new DialogInterface.OnClickListener() {
                        public void onClick(DialogInterface dialog, int id) {

                            Intent pdfOpenintent = new Intent(Intent.ACTION_VIEW);
                            Log.e("AB_PATH",fpath+"");
                            File file = new File(fpath);

                            String extension = android.webkit.MimeTypeMap.getFileExtensionFromUrl(Uri.fromFile(file).toString());
                            String mimetype = android.webkit.MimeTypeMap.getSingleton().getMimeTypeFromExtension(extension);

                            if (extension.equalsIgnoreCase("") || mimetype == null) {
                                // if there is no extension or there is no definite mimetype, still try to open the file
                                pdfOpenintent.setDataAndType(Uri.fromFile(file), "text/*");
                            } else {
                                pdfOpenintent.setDataAndType(Uri.fromFile(file), mimetype);
                            }
                            // custom message for the intent
                            startActivity(Intent.createChooser(pdfOpenintent, "Choose an Application:"));

                        }
                    })
                    .setPositiveButton("ok", new DialogInterface.OnClickListener() {
                        public void onClick(DialogInterface dialog, int id) {
                            dialog.cancel();
                        }
                    });

            AlertDialog alert = builder.create();
            alert.show();
        }

    }
}
